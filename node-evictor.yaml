---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-evictor-sa
---
apiVersion: v1
kind: Secret
metadata:
  name: node-evictor-sa-token
  annotations:
    kubernetes.io/service-account.name: node-evictor-sa
type: kubernetes.io/service-account-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: node-evictor-role
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["list", "get", "watch", "patch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: node-evictor-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: node-evictor-role
subjects:
  - kind: ServiceAccount
    name: node-evictor-sa
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-evictor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node-evictor
  template:
    metadata:
      labels:
        app: node-evictor
    spec:
      serviceAccountName: node-evictor-sa
      containers:
        - name: node-evictor
          image: zorlin/node-evictor:latest
          imagePullPolicy: Always
          env:
            - name: KUBERNETES_SERVICE_HOST
              value: "opal.riff.cc"
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
            - name: TOKEN_PATH
              value: "/var/run/secrets/kubernetes.io/serviceaccount/token"
          volumeMounts:
            - name: kube-token
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              readOnly: true
      volumes:
        - name: kube-token
          secret:
            secretName: node-evictor-sa-token
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 10
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 10
